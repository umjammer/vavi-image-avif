package vavi.awt.image.jna.avif;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : avif/avif.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class avifImage extends Structure {
	public int width;
	public int height;
	/** all planes must share this depth; if depth>8, all planes are uint16_t internally */
	public int depth;
	/**
	 * @see AvifLibrary.avifPixelFormat
	 * C type : avifPixelFormat
	 */
	public int yuvFormat;
	/**
	 * @see AvifLibrary.avifRange
	 * C type : avifRange
	 */
	public int yuvRange;
	/**
	 * @see AvifLibrary.avifChromaSamplePosition
	 * C type : avifChromaSamplePosition
	 */
	public int yuvChromaSamplePosition;
	/** C type : uint8_t*[3] */
	public Pointer[] yuvPlanes = new Pointer[3];
	/** C type : uint32_t[3] */
	public int[] yuvRowBytes = new int[3];
	/** C type : avifBool */
	public int imageOwnsYUVPlanes;
	/** C type : uint8_t* */
	public Pointer alphaPlane;
	public int alphaRowBytes;
	/** C type : avifBool */
	public int imageOwnsAlphaPlane;
	/** C type : avifBool */
	public int alphaPremultiplied;
	/** C type : avifRWData */
	public avifRWData icc;
	/** C type : avifColorPrimaries */
	public short colorPrimaries;
	/** C type : avifTransferCharacteristics */
	public short transferCharacteristics;
	/** C type : avifMatrixCoefficients */
	public short matrixCoefficients;
	/** C type : avifContentLightLevelInformationBox */
	public avifContentLightLevelInformationBox clli;
	/** C type : avifTransformFlags */
	public int transformFlags;
	/** C type : avifPixelAspectRatioBox */
	public avifPixelAspectRatioBox pasp;
	/** C type : avifCleanApertureBox */
	public avifCleanApertureBox clap;
	/** C type : avifImageRotation */
	public avifImageRotation irot;
	/** C type : avifImageMirror */
	public avifImageMirror imir;
	/** C type : avifRWData */
	public avifRWData exif;
	/** C type : avifRWData */
	public avifRWData xmp;
	public avifImage() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("width", "height", "depth", "yuvFormat", "yuvRange", "yuvChromaSamplePosition", "yuvPlanes", "yuvRowBytes", "imageOwnsYUVPlanes", "alphaPlane", "alphaRowBytes", "imageOwnsAlphaPlane", "alphaPremultiplied", "icc", "colorPrimaries", "transferCharacteristics", "matrixCoefficients", "clli", "transformFlags", "pasp", "clap", "irot", "imir", "exif", "xmp");
	}
	public avifImage(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends avifImage implements Structure.ByReference {
	}
	public static class ByValue extends avifImage implements Structure.ByValue {
	}
}
